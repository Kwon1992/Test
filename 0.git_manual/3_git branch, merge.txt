branch? 
-- 코드를 수정하다 프로그램이 망가지는 것을 방지하기 위해 복사본을 만들어서 미리 개발해보고 원 소스에 반영하기 위한 기능
-- 프로그램(commit)의 복사본이라 생각하면 됨.

(예)
--쇼핑몰 페이지 개발 중 쿠폰 기능 추가.
--원 소스에 바로 반영하는 것은 위험하니 branch를 만들어서 미리 테스트!!


git branch 브랜치명
-- 브랜치를 생성함.

git switch 브랜치명
-- 해당 브랜치로 이동함.

git merge 브랜치명
-- 해당 브랜치명을 현재 위치한(HEAD가 바라보고 있는) 브랜치에 추가시킨다.
-- 충돌(conflict) :: 같은 파일의 같은 줄을 각각의 브랜치에서 각자 수정한 경우 컴퓨터는 어느 것이 맞는지 알 수 없다.
-- 충돌이 발생한 경우 사람이 직접 수정해주어야 한다..
-- 1. 남길 코드 이외의 나머지 코드들은 지운다
-- 2. git add 파일명
-- 3. git commit -m '메모'
-- 위 3단계를 거치면 정상적으로 충돌 해결 후 merge 됨!!


git status
-- 현재 내가 어느 branch에 있는지 모를 때 사용하면 좋다.


<<오늘의 요약>>
브랜치 생성은 git branch 브랜치명

브랜치 이동은 git switch 브랜치명 

브랜치 합치기는 main/master 브랜치로 이동한 뒤에 git merge 브랜치명

브랜치마다 commit 내역을 그래프로 보고싶으면 git log --graph --oneline --all

브랜치 합칠 때 conflict가 발생하면 파일열어서 수정하고 git add, git commit 하기 